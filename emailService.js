const nodemailer = require('nodemailer');

class EmailService {
    constructor() {
        this.transporter = null;
        this.isEnabled = false;
        this.fromEmail = process.env.EMAIL_FROM;
        this.fromName = process.env.EMAIL_FROM_NAME || 'TechPortal';

        this.init();
    }

    init() {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
            if (!process.env.SMTP_HOST || !process.env.SMTP_USER || !process.env.SMTP_PASS) {
                console.log('üìß Email: SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤–∫–∞ email –æ—Ç–∫–ª—é—á–µ–Ω–∞');
                return;
            }

            // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä
            this.transporter = nodemailer.createTransport({
                host: process.env.SMTP_HOST,
                port: parseInt(process.env.SMTP_PORT) || 587,
                secure: (process.env.SMTP_PORT == '465'), // true –¥–ª—è 465, false –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ—Ä—Ç–æ–≤
                auth: {
                    user: process.env.SMTP_USER,
                    pass: process.env.SMTP_PASS
                },
                tls: {
                    rejectUnauthorized: false // –î–ª—è —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
                }
            });

            this.isEnabled = true;
            console.log('‚úÖ Email —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            this.verifyConnection();

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ email —Å–µ—Ä–≤–∏—Å–∞:', error.message);
            this.isEnabled = false;
        }
    }

    async verifyConnection() {
        if (!this.transporter) return false;

        try {
            await this.transporter.verify();
            console.log('‚úÖ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
            return true;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', error.message);
            this.isEnabled = false;
            return false;
        }
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É
    async sendReply(to, subject, message, originalContact) {
        if (!this.isEnabled || !this.transporter) {
            throw new Error('Email —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        }

        try {
            // –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –ø—Ä–æ–≤–µ—Ä—è–µ–º email –ø–æ–ª—É—á–∞—Ç–µ–ª—è
            if (!this.isValidEmail(to)) {
                throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π email –∞–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è');
            }

            // –§–æ—Ä–º–∏—Ä—É–µ–º HTML –≤–µ—Ä—Å–∏—é –ø–∏—Å—å–º–∞
            const htmlMessage = this.formatReplyHTML(message, originalContact);

            const mailOptions = {
                from: `"${this.fromName}" <${this.fromEmail}>`,
                to: to,
                subject: subject,
                text: message, // –¢–µ–∫—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è
                html: htmlMessage, // HTML –≤–µ—Ä—Å–∏—è
                replyTo: process.env.SMTP_USER, // –î–ª—è –æ—Ç–≤–µ—Ç–æ–≤
                headers: {
                    'X-Mailer': 'TechPortal Admin Panel',
                    'X-Priority': '3'
                }
            };

            const info = await this.transporter.sendMail(mailOptions);

            console.log('üìß Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:', {
                to: to,
                subject: subject,
                messageId: info.messageId
            });

            return {
                success: true,
                messageId: info.messageId,
                response: info.response
            };

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error.message);
            throw error;
        }
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTML –ø–∏—Å—å–º–∞
    formatReplyHTML(message, originalContact) {
        const formattedMessage = message.replace(/\n/g, '<br>');

        return `
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–û—Ç–≤–µ—Ç –æ—Ç TechPortal</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            background: white;
            border-radius: 10px;
            padding: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            text-align: center;
        }
        .message {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            border-left: 4px solid #667eea;
            margin: 20px 0;
        }
        .footer {
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #eee;
            text-align: center;
            color: #666;
            font-size: 14px;
        }
        .original-message {
            margin-top: 30px;
            padding: 15px;
            background: #f1f3f4;
            border-radius: 8px;
            font-size: 14px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>TechPortal</h1>
            <p>–û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</p>
        </div>
        
        <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${this.escapeHtml(originalContact.name)}!</p>
        
        <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ. –í–æ—Ç –º–æ–π –æ—Ç–≤–µ—Ç:</p>
        
        <div class="message">
            ${formattedMessage}
        </div>
        
        ${originalContact ? `
        <div class="original-message">
            <strong>–í–∞—à–µ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:</strong><br>
            <em>"${this.escapeHtml(originalContact.message)}"</em><br>
            <small>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${new Date(originalContact.createdAt).toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}</small>
        </div>
        ` : ''}
        
        <div class="footer">
            <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ TechPortal</p>
            <p>
                <small>
                    –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ –æ—Ç ${process.env.SITE_URL || 'TechPortal'}<br>
                    –î–ª—è –æ—Ç–≤–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–≤–µ—Ç–∏—Ç—å" –≤ –≤–∞—à–µ–º –ø–æ—á—Ç–æ–≤–æ–º –∫–ª–∏–µ–Ω—Ç–µ
                </small>
            </p>
        </div>
    </div>
</body>
</html>
        `;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ email
    isValidEmail(email) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email) && email.length <= 254;
    }

    // –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ HTML
    escapeHtml(text) {
        if (typeof text !== 'string') return text;
        return text
            .replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;')
            .replace(/"/g, '&quot;')
            .replace(/'/g, '&#39;');
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
    isAvailable() {
        return this.isEnabled && this.transporter !== null;
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–±–µ–∑ –ø–∞—Ä–æ–ª–µ–π)
    getConfig() {
        return {
            enabled: this.isEnabled,
            fromEmail: this.fromEmail,
            fromName: this.fromName,
            smtpHost: process.env.SMTP_HOST || null,
            smtpPort: process.env.SMTP_PORT || null
        };
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞
    async sendTestEmail(to) {
        if (!this.isEnabled) {
            throw new Error('Email —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        }

        const testMessage = `
–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç TechPortal Admin Panel.

–ï—Å–ª–∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ –ø–∏—Å—å–º–æ, –∑–Ω–∞—á–∏—Ç email –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.

–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}
–°–µ—Ä–≤–µ—Ä: ${process.env.SITE_URL || 'localhost'}
        `;

        return await this.sendReply(
            to,
            '–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç TechPortal',
            testMessage,
            {
                name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                message: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
                createdAt: new Date()
            }
        );
    }
}

module.exports = new EmailService();
