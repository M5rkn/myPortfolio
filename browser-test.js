// üîç –†–ê–°–®–ò–†–ï–ù–ù–´–ô –¢–ï–°–¢–ï–† TECHPORTAL - –í—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)

(function() {
    console.clear();
    console.log('%cüîç –ó–ê–ü–£–°–ö –†–ê–°–®–ò–†–ï–ù–ù–û–ô –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò TECHPORTAL', 'background: #0f4f0f; color: #00ff00; padding: 10px; font-size: 16px; font-weight: bold;');
    
    const results = [];
    let errors = [];
    let warnings = [];
    
    // –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    function testLog(message, status = 'info', details = null) {
        const symbols = { success: '‚úÖ', error: '‚ùå', warning: '‚ö†Ô∏è', info: '‚ÑπÔ∏è' };
        const colors = { 
            success: 'color: #00ff00; font-weight: bold;',
            error: 'color: #ff0000; font-weight: bold;', 
            warning: 'color: #ffff00; font-weight: bold;',
            info: 'color: #00aaff;'
        };
        
        console.log(`%c${symbols[status]} ${message}`, colors[status]);
        if (details) console.log(details);
        
        results.push({ message, status, details, timestamp: new Date().toISOString() });
    }

    // –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª–µ–π
    testLog('–¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª–µ–π JavaScript', 'info');
    
    const requiredModules = [
        'SecurityModule',
        'ApiModule', 
        'NavigationModule',
        'FormsModule',
        'PortfolioModule',
        'ChatModule',

        'AnimationsModule',
        'ParticlesModule'
    ];
    
    let loadedModules = 0;
    const moduleDetails = {};
    
    requiredModules.forEach(moduleName => {
        const module = window[moduleName];
        if (module && typeof module === 'object') {
            testLog(`${moduleName} - –∑–∞–≥—Ä—É–∂–µ–Ω`, 'success');
            loadedModules++;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–¥—É–ª—è
            const functions = Object.keys(module).filter(key => typeof module[key] === 'function');
            moduleDetails[moduleName] = functions;
            
            if (functions.length > 0) {
                console.log(`   –§—É–Ω–∫—Ü–∏–∏: ${functions.join(', ')}`);
            }
        } else {
            testLog(`${moduleName} - –ù–ï –ó–ê–ì–†–£–ñ–ï–ù`, 'error');
        }
    });
    
    testLog(`–ò—Ç–æ–≥–æ –º–æ–¥—É–ª–µ–π –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${loadedModules}/${requiredModules.length}`, 
            loadedModules === requiredModules.length ? 'success' : 'warning');

    // –¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    testLog('–¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ DOM —Å—Ç—Ä—É–∫—Ç—É—Ä—ã', 'info');
    
    const criticalElements = [
        { selector: '#particles-js', name: '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —á–∞—Å—Ç–∏—Ü', critical: true },
        { selector: '.navbar', name: '–ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å', critical: true },
        { selector: '.hero', name: '–ì–ª–∞–≤–Ω–∞—è —Å–µ–∫—Ü–∏—è', critical: true },
        { selector: '.portfolio', name: '–°–µ–∫—Ü–∏—è –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ', critical: true },
        { selector: '.chat-widget', name: '–í–∏–¥–∂–µ—Ç —á–∞—Ç–∞', critical: false },

        { selector: '.contact-form', name: '–§–æ—Ä–º–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤', critical: false },
        { selector: '.preloader', name: '–ü—Ä–µ–ª–æ–∞–¥–µ—Ä', critical: false }
    ];
    
    let foundElements = 0;
    let criticalMissing = 0;
    
    criticalElements.forEach(element => {
        const domElement = document.querySelector(element.selector);
        if (domElement) {
            testLog(`${element.name} - –Ω–∞–π–¥–µ–Ω`, 'success');
            foundElements++;
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
            const rect = domElement.getBoundingClientRect();
            const isVisible = rect.width > 0 && rect.height > 0;
            const hasContent = domElement.children.length > 0 || domElement.textContent.trim().length > 0;
            
            console.log(`   –í–∏–¥–∏–º–æ—Å—Ç—å: ${isVisible ? '‚úÖ' : '‚ùå'}, –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: ${hasContent ? '‚úÖ' : '‚ùå'}`);
            
        } else {
            const status = element.critical ? 'error' : 'warning';
            testLog(`${element.name} - –ù–ï –ù–ê–ô–î–ï–ù`, status);
            if (element.critical) criticalMissing++;
        }
    });
    
    testLog(`DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: ${foundElements}/${criticalElements.length}`, 
            criticalMissing === 0 ? 'success' : 'warning');

    // –¢–ï–°–¢ 3: –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫ –∫–æ–Ω—Å–æ–ª–∏
    testLog('–¢–ï–°–¢ 3: –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫ –∫–æ–Ω—Å–æ–ª–∏', 'info');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—É—Ñ–µ—Ä –æ—à–∏–±–æ–∫ (–µ—Å–ª–∏ –æ–Ω–∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–ª–∏—Å—å)
    if (window.capturedErrors && window.capturedErrors.length > 0) {
        testLog(`–ù–∞–π–¥–µ–Ω–æ –æ—à–∏–±–æ–∫: ${window.capturedErrors.length}`, 'error');
        window.capturedErrors.slice(-3).forEach(error => {
            console.error(`   ${error.message || error}`);
        });
    } else {
        testLog('–ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ', 'success');
    }

    // –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
    testLog('–¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤', 'info');
    
    const resources = performance.getEntriesByType('resource');
    const failedResources = resources.filter(r => r.transferSize === 0 && r.decodedBodySize === 0);
    
    testLog(`–í—Å–µ–≥–æ —Ä–µ—Å—É—Ä—Å–æ–≤: ${resources.length}`, 'info');
    
    if (failedResources.length > 0) {
        testLog(`–ù–µ—É–¥–∞—á–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫: ${failedResources.length}`, 'warning');
        failedResources.forEach(resource => {
            console.warn(`   –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω: ${resource.name}`);
        });
    } else {
        testLog('–í—Å–µ —Ä–µ—Å—É—Ä—Å—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ', 'success');
    }

    // –¢–ï–°–¢ 5: –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    testLog('–¢–ï–°–¢ 5: –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', 'info');
    
    // –¢–µ—Å—Ç —á–∞—Å—Ç–∏—Ü
    const particlesContainer = document.querySelector('#particles-js');
    if (particlesContainer) {
        const hasParticles = particlesContainer.children.length > 0 || 
                           (typeof particlesJS !== 'undefined') ||
                           particlesContainer.querySelector('.fallback-particle');
        testLog(`–ß–∞—Å—Ç–∏—Ü—ã: ${hasParticles ? '–∞–∫—Ç–∏–≤–Ω—ã' : '–Ω–µ–∞–∫—Ç–∏–≤–Ω—ã'}`, hasParticles ? 'success' : 'warning');
    }
    
    // –¢–µ—Å—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if (window.NavigationModule) {
        try {
            const navLinks = document.querySelectorAll('.nav-link');
            const hamburger = document.querySelector('.hamburger');
            testLog(`–ù–∞–≤–∏–≥–∞—Ü–∏—è: ${navLinks.length} —Å—Å—ã–ª–æ–∫, –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é: ${hamburger ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'}`, 'success');
        } catch (error) {
            testLog(`–û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: ${error.message}`, 'error');
        }
    }
    
    // –¢–µ—Å—Ç —á–∞—Ç–∞
    if (window.ChatModule) {
        const chatWidget = document.querySelector('.chat-widget');
        const chatToggle = chatWidget ? chatWidget.querySelector('.chat-toggle') : null;
        testLog(`–ß–∞—Ç: –≤–∏–¥–∂–µ—Ç ${chatWidget ? '–Ω–∞–π–¥–µ–Ω' : '–Ω–µ –Ω–∞–π–¥–µ–Ω'}, –∫–Ω–æ–ø–∫–∞ ${chatToggle ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'}`, 
                chatWidget ? 'success' : 'warning');
    }
    


    // –¢–ï–°–¢ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    testLog('–¢–ï–°–¢ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏', 'info');
    
    if (performance.memory) {
        const memory = performance.memory;
        const used = Math.round(memory.usedJSHeapSize / 1024 / 1024);
        const total = Math.round(memory.totalJSHeapSize / 1024 / 1024);
        const limit = Math.round(memory.jsHeapSizeLimit / 1024 / 1024);
        
        testLog(`–ü–∞–º—è—Ç—å: ${used}MB –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è / ${total}MB –≤—ã–¥–µ–ª–µ–Ω–æ / ${limit}MB –ª–∏–º–∏—Ç`, 
                used < total * 0.8 ? 'success' : 'warning');
    }
    
    // –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
    const navTiming = performance.getEntriesByType('navigation')[0];
    if (navTiming) {
        const loadTime = Math.round(navTiming.loadEventEnd - navTiming.fetchStart);
        testLog(`–í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${loadTime}ms`, loadTime < 3000 ? 'success' : 'warning');
    }

    // –¢–ï–°–¢ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    testLog('–¢–ï–°–¢ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', 'info');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ CSP
    const cspMeta = document.querySelector('meta[http-equiv="Content-Security-Policy"]');
    testLog(`Content Security Policy: ${cspMeta ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`, 
            cspMeta ? 'success' : 'warning');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTPS
    const isHTTPS = location.protocol === 'https:';
    testLog(`HTTPS —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ: ${isHTTPS ? '–¥–∞' : '–Ω–µ—Ç'}`, isHTTPS ? 'success' : 'warning');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö —Å—Å—ã–ª–æ–∫
    const externalLinks = document.querySelectorAll('a[href^="http"]');
    let secureLinks = 0;
    externalLinks.forEach(link => {
        if (link.getAttribute('rel')?.includes('noopener')) secureLinks++;
    });
    testLog(`–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –≤–Ω–µ—à–Ω–∏–µ —Å—Å—ã–ª–∫–∏: ${secureLinks}/${externalLinks.length}`, 
            secureLinks === externalLinks.length ? 'success' : 'warning');

    // –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢
    console.log('\n');
    console.log('%cüìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢', 'background: #003300; color: #00ff00; padding: 10px; font-size: 14px; font-weight: bold;');
    
    const successCount = results.filter(r => r.status === 'success').length;
    const errorCount = results.filter(r => r.status === 'error').length;
    const warningCount = results.filter(r => r.status === 'warning').length;
    
    const totalScore = Math.round(
        (loadedModules / requiredModules.length) * 30 +
        (foundElements / criticalElements.length) * 30 +
        Math.max(0, 25 - errorCount * 5) +
        Math.max(0, 15 - warningCount * 2)
    );
    
    console.log(`%cüéØ –û–ë–©–ò–ô –ë–ê–õ–õ: ${totalScore}/100`, 
                `color: ${totalScore >= 80 ? '#00ff00' : totalScore >= 60 ? '#ffff00' : '#ff0000'}; font-size: 18px; font-weight: bold;`);
    
    console.log(`%c‚úÖ –£—Å–ø–µ—à–Ω–æ: ${successCount}`, 'color: #00ff00;');
    console.log(`%c‚ùå –û—à–∏–±–∫–∏: ${errorCount}`, 'color: #ff0000;');
    console.log(`%c‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: ${warningCount}`, 'color: #ffff00;');
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if (totalScore < 80) {
        console.log('\n%cüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:', 'color: #00aaff; font-weight: bold;');
        
        if (errorCount > 0) {
            console.log('%c‚Ä¢ –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏', 'color: #ff0000;');
        }
        if (loadedModules < requiredModules.length) {
            console.log('%c‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π', 'color: #ffff00;');
        }
        if (criticalMissing > 0) {
            console.log('%c‚Ä¢ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ DOM —ç–ª–µ–º–µ–Ω—Ç—ã', 'color: #ffff00;');
        }
        if (warningCount > 5) {
            console.log('%c‚Ä¢ –£–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π', 'color: #ffff00;');
        }
    } else {
        console.log('\n%cüéâ –°–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!', 'color: #00ff00; font-size: 16px; font-weight: bold;');
    }
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    window.diagnosticResults = {
        timestamp: new Date().toISOString(),
        score: totalScore,
        results: results,
        modules: moduleDetails,
        summary: {
            success: successCount,
            errors: errorCount,
            warnings: warningCount
        }
    };
    
    console.log('\n%cüîß –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ window.diagnosticResults', 'color: #888;');
    console.log('%cüìã –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤–≤–µ–¥–∏—Ç–µ: location.reload() –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –∫–æ–¥ —Å–Ω–æ–≤–∞', 'color: #888;');
    
})();

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
window.testUtils = {
    // –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —á–∞—Ç–∞
    testChat: function() {
        const widget = document.querySelector('.chat-widget');
        const toggle = widget?.querySelector('.chat-toggle');
        if (toggle) {
            console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É—é —á–∞—Ç...');
            toggle.click();
            setTimeout(() => {
                console.log('‚úÖ –ß–∞—Ç –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω');
                toggle.click();
            }, 2000);
        } else {
            console.log('‚ùå –ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
    },
    
    // –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    testNavigation: function() {
        const links = document.querySelectorAll('.nav-link');
        console.log(`üß™ –ù–∞–π–¥–µ–Ω–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫: ${links.length}`);
        links.forEach((link, i) => {
            console.log(`${i + 1}. ${link.textContent} ‚Üí ${link.href}`);
        });
    },
    
    // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    startPerformanceMonitor: function() {
        let frameCount = 0;
        let lastTime = performance.now();
        
        function monitor() {
            frameCount++;
            const currentTime = performance.now();
            
            if (currentTime - lastTime >= 1000) {
                console.log(`üìä FPS: ${frameCount}, –ü–∞–º—è—Ç—å: ${Math.round(performance.memory.usedJSHeapSize / 1024 / 1024)}MB`);
                frameCount = 0;
                lastTime = currentTime;
            }
            
            requestAnimationFrame(monitor);
        }
        
        console.log('üìä –ó–∞–ø—É—â–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');
        requestAnimationFrame(monitor);
    }
};

console.log('\n%cüõ†Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã —É—Ç–∏–ª–∏—Ç—ã: testUtils.testChat(), testUtils.testNavigation(), testUtils.startPerformanceMonitor()', 'color: #888;'); 