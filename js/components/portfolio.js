// ========== PORTFOLIO MODULE ==========
// –ü—Ä–æ—Å—Ç–∞—è –∏ –Ω–∞–¥–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω

// –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–æ–≤
const PROJECTS = {
    'project-1': {
        title: '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏',
        description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω —Å –∫–æ—Ä–∑–∏–Ω–æ–π, —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å—é',
        technologies: ['Node.js', 'MongoDB', 'Express', 'EJS'],
        features: ['–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫', '–°–∏—Å—Ç–µ–º–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤', '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å', '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏'],
        icon: 'üõí',
        gradient: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'
    },
    'project-2': {
        title: '–õ–µ–Ω–¥–∏–Ω–≥ —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏',
        description: '–ö—Ä–∞—Å–∏–≤—ã–π –ª–µ–Ω–¥–∏–Ω–≥ —Å –ø–ª–∞–≤–Ω—ã–º–∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –∏ –ø–∞—Ä–∞–ª–ª–∞–∫—Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏',
        technologies: ['HTML5', 'SCSS', 'JavaScript', 'GSAP'],
        features: ['–ü–∞—Ä–∞–ª–ª–∞–∫—Å —ç—Ñ—Ñ–µ–∫—Ç—ã', '–ü–ª–∞–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏', '–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω', '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è'],
        icon: 'üé®',
        gradient: 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)'
    },
    'project-3': {
        title: '–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
        description: '–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å JWT —Ç–æ–∫–µ–Ω–∞–º–∏ –∏ –∑–∞—â–∏—Ç–æ–π –æ—Ç –∞—Ç–∞–∫',
        technologies: ['Node.js', 'JWT', 'MongoDB', 'bcrypt'],
        features: ['JWT –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', '–•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π', '–ó–∞—â–∏—Ç–∞ –æ—Ç CSRF', '–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö'],
        icon: 'üîê',
        gradient: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)'
    },
    'project-4': {
        title: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –±–ª–æ–≥',
        description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–ª–æ–≥ —Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º',
        technologies: ['React', 'Node.js', 'Express', 'MongoDB'],
        features: ['–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å', 'WYSIWYG —Ä–µ–¥–∞–∫—Ç–æ—Ä', 'SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è', '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏'],
        icon: 'üìù',
        gradient: 'linear-gradient(135deg, #a855f7 0%, #3b82f6 100%)'
    },
    'project-5': {
        title: 'WordPress + Custom',
        description: '–ö–∞—Å—Ç–æ–º–Ω–∞—è —Ç–µ–º–∞ WordPress —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é –Ω–∞ –∑–∞–∫–∞–∑',
        technologies: ['WordPress', 'PHP', 'MySQL', 'ACF'],
        features: ['–ö–∞—Å—Ç–æ–º–Ω–∞—è —Ç–µ–º–∞', '–ü–ª–∞–≥–∏–Ω—ã', 'ACF –ø–æ–ª—è', 'SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è'],
        icon: 'üì±',
        gradient: 'linear-gradient(135deg, #06b6d4 0%, #3b82f6 100%)'
    },
    'project-6': {
        title: 'PSD ‚Üí –≤–µ—Ä—Å—Ç–∫–∞',
        description: '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≤–µ—Ä—Å—Ç–∫–∞ –∏–∑ –¥–∏–∑–∞–π–Ω-–º–∞–∫–µ—Ç–æ–≤ Figma, PSD, Adobe XD',
        technologies: ['HTML5', 'CSS3', 'SCSS', 'JavaScript'],
        features: ['–ü–∏–∫—Å–µ–ª—å –≤ –ø–∏–∫—Å–µ–ª—å', '–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å', '–ö—Ä–æ—Å—Å–±—Ä–∞—É–∑–µ—Ä–Ω–æ—Å—Ç—å', '–í–∞–ª–∏–¥–Ω–∞—è –≤–µ—Ä—Å—Ç–∫–∞'],
        icon: 'üíª',
        gradient: 'linear-gradient(135deg, #f59e0b 0%, #ef4444 100%)'
    }
};

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openModal(projectId) {
    console.log('Opening modal for:', projectId);
    
    const project = PROJECTS[projectId];
    if (!project) {
        console.error('Project not found:', projectId);
        return;
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    let modal = document.getElementById('project-modal-overlay');
    
    if (!modal) {
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        modal = document.createElement('div');
        modal.id = 'project-modal-overlay';
        modal.className = 'modal-overlay';
        document.body.appendChild(modal);
    }

    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    modal.innerHTML = `
        <div class="modal-content">
            <div class="modal-header">
                <div class="project-icon" style="background: ${project.gradient};">
                    ${project.icon}
                </div>
                <h2>${project.title}</h2>
                <button class="modal-close" onclick="closeModal()">√ó</button>
            </div>
            
            <div class="modal-body">
                <div class="modal-info">
                    <p class="project-description">${project.description}</p>
                    
                    <div class="project-technologies">
                        <h4>–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</h4>
                        <div class="tech-tags">
                            ${project.technologies.map(tech => `<span class="tech-tag">${tech}</span>`).join('')}
                        </div>
                    </div>
                    
                    <div class="project-features">
                        <h4>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏</h4>
                        <ul>
                            ${project.features.map(feature => `<li>${feature}</li>`).join('')}
                        </ul>
                    </div>
                    
                    <div class="project-actions">
                        <button class="btn btn-primary" onclick="alert('–î–µ–º–æ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ!')">
                            –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–µ–∫—Ç
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal.classList.add('active');
    document.body.style.overflow = 'hidden';
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ overlay
    modal.onclick = function(e) {
        if (e.target === modal) {
            closeModal();
        }
    };
    
    console.log('Modal opened successfully');
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModal() {
    console.log('Closing modal');
    
    const modal = document.getElementById('project-modal-overlay');
    if (modal) {
        modal.classList.remove('active');
        document.body.style.overflow = '';
        
        // –£–¥–∞–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —á–µ—Ä–µ–∑ 300ms
        setTimeout(() => {
            if (modal.parentNode) {
                modal.parentNode.removeChild(modal);
            }
        }, 300);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function initPortfolio() {
    console.log('Initializing portfolio...');
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–ª–∞–≤–∏—à–∏ Escape
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeModal();
        }
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–∞ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
    const portfolioItems = document.querySelectorAll('.portfolio-item');
    console.log('Found portfolio items:', portfolioItems.length);
    
    portfolioItems.forEach((item, index) => {
        const projectId = item.getAttribute('data-project-id');
        console.log(`Setting up item ${index + 1}:`, projectId);
        
        // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        item.removeEventListener('click', handlePortfolioClick);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        item.addEventListener('click', handlePortfolioClick);
        
        // –¢–∞–∫–∂–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Å—ã–ª–æ–∫ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
        const link = item.querySelector('.portfolio-link');
        if (link) {
            link.removeEventListener('click', handlePortfolioClick);
            link.addEventListener('click', handlePortfolioClick);
        }
    });
    
    console.log('Portfolio initialized successfully!');
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
function handlePortfolioClick(e) {
    e.preventDefault();
    e.stopPropagation();
    
    const item = e.target.closest('.portfolio-item');
    if (!item) return;
    
    const projectId = item.getAttribute('data-project-id');
    console.log('Portfolio item clicked:', projectId);
    
    if (projectId) {
        openModal(projectId);
    }
}

// –§—É–Ω–∫—Ü–∏—è typewriter —ç—Ñ—Ñ–µ–∫—Ç–∞
function typeWriter(element, text, speed = 80) {
    if (!element) return;
    
    element.textContent = '';
    let i = 0;
    
    function type() {
        if (i < text.length) {
            element.textContent += text.charAt(i);
            i++;
            setTimeout(type, speed);
        }
    }
    
    type();
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π
window.openModal = openModal;
window.closeModal = closeModal;
window.initPortfolio = initPortfolio;
window.typeWriter = typeWriter;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initPortfolio);
} else {
    initPortfolio();
}

// –≠–∫—Å–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
window.PortfolioModule = {
    openProjectModal: openModal,
    closeProjectModal: closeModal,
    initializePortfolio: initPortfolio,
    typeWriter: typeWriter
}; 